---
- name: Show object to pin
  debug:
    msg: "Module: {{ module }} - Name: {{ object_name }} - Type: {{ object_type }}"

- name: Set Objets metadata
  set_fact:
    objects_metadata: "{{ lookup('file', 'files/objects_metadata.json', errors='strict') }}"

# Get device under Pinning Policy
- name: Get existing object pinned on the device - Any LTM or Shared Security object but ASM
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}{{ objects_metadata['components'][module]['endpoints']['pinning']['uri'] }}?$filter=deviceReference.machineId%20eq%20'{{ machine_id }}'"
    method: GET
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: json_response
  when: module != "asm"

- name: Get the ID of the Device under Pinning Policy - Any LTM or Shared Security object but ASM
  set_fact:
    object_pinning_id: "{{ json_response | json_query(query) }}"
  vars: 
    query: "json.items[0].id"
  when: module != "asm"

# Get existing object already pin on the device
- name: Get the existing object - Any LTM or Shared Security object but ASM
  set_fact:
    existing_objects: "{{ json_response | json_query(query) }}"
  vars: 
    query: "json.items[0].{{ object_type }}"
  when: module != "asm"

# Get device under Inactive Virtual Server
- name: Get existing object pinned on the device - ASM only
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}{{ objects_metadata['components'][module]['endpoints']['pinning']['uri'] }}?$filter=deviceReference.machineId%20eq%20'{{ machine_id }}'%20and%20name%20eq%20'inactive'"
    method: GET
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: json_response
  when: module == "asm"

- name: Get the ID of the Device under Inactive Virtual Server - ASM only
  set_fact:
    object_pinning_id: "{{ json_response | json_query(query) }}"
  vars: 
    query: "json.items[0].id"
  when: module == "asm"

# Get existing object already pin on the device
- name: Get the existing object - ASM only
  set_fact:
    existing_objects: "{{ json_response | json_query(query) }}"
  vars: 
    query: "json.items[0].{{ object_type }}"
  when: module == "asm"

# Common part
#- debug:
#    var: existing_objects

- name: Get object details 
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}{{ objects_metadata['components'][module]['endpoints'][object_type]['uri'] }}?$filter=name%20eq%20'{{ object_name }}'"
    method: GET
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: json_response

- name: Get kind of the object to pin
  set_fact:
    object_kind: "{{ json_response | json_query(query) }}"
  vars: 
    query: "json.items[0].kind"

- name: Get id of the object to pin
  set_fact:
    object_id: "{{ json_response | json_query(query) }}"
  vars: 
    query: "json.items[0].id"

- name: Get object_id
  fail: msg="Not able to retreive the object_id. Please check the object exist in BIG-IQ or re-try."
  when: object_id|length == 0

# Not ASM
- name: new array of the object to pin - Any LTM or Shared Security object but ASM
  set_fact:
    new_object_pin: '{ "id": "{{ object_id }}", "kind": "{{ object_kind }}", "link": "https://localhost{{ objects_metadata["components"][module]["endpoints"][object_type]["uri"] }}/{{ object_id }}", "name": "{{ object_name }}"}'
  when: module != "asm"

# ASM
- name: new array of the object to pin - ASM only
  set_fact:
    new_object_pin: '{ "link": "https://localhost{{ objects_metadata["components"][module]["endpoints"][object_type]["uri"] }}/{{ object_id }}"}'
  when: module == "asm"

#- debug:
#    var: new_object_pin

- name: existing_objects + new_object_pin
  set_fact:
    all_objects: "{{ existing_objects + [ new_object_pin ] }}"

#- debug:
#    var: existing_objects

#- debug:
#    var: object_id

- name: Pinning object to the device
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}{{ objects_metadata['components'][module]['endpoints']['pinning']['uri'] }}/{{ object_pinning_id }}"
    method: PATCH
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      Content-Type: application/json
      X-F5-Auth-Token: "{{ f5_auth_token }}"
    body: |
      {
        "id": "{{ object_pinning_id }}",
        "{{ object_type }}": {{ all_objects }}
      }
    body_format: json
  register: json_response
  # Look if the object is already pin, if it is, no need to pin it again
  when: existing_objects | selectattr(search_key,'equalto',search_val) | list | count == 0
  vars:
    search_key: id
    search_val: "{{ object_id }}"