---
###### Get the device ID when an device IP is given
- name: Get machineID of the device
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/resolver/device-groups/cm-adccore-allbigipDevices/devices?$filter=address%20eq%20'{{ device_address }}...{{ device_address }}'"
    method: GET
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: json_response
  when: 
    - device_address is defined

- name: Get the machineID of the specified BIG-IP with IP address
  set_fact:
    machine_id: "{{ json_response | json_query(query) | join(' ') }}"
  vars: 
    query: "json.items[?address=='{{ device_address }}'].machineId"
  when: 
    - device_address is defined

# Check if it is a cluster or standalone
- name: Get cluster name if any
  set_fact:
    clusterName: "{{ json_response | json_query(query) | join(' ') }}"
  vars: 
    query: "json.items[?address=='{{ device_address }}'].properties.clusterName"
  when: 
    - device_address is defined

# If clusterName is defined, get the other node machine_id
- name: Get machineID of the other device
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/resolver/device-groups/cm-adccore-allbigipDevices/devices?$filter=address%20ne%20'{{ device_address }}'%20and%20properties.clusterName%20eq%20'{{ clusterName }}'"
    method: GET
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: json_response
  when: 
    - device_address is defined
    - clusterName | length > 0
    
- name: Get the machineID of the other BIG-IP part of the cluster
  set_fact:
    machine_id2: "{{ json_response | json_query(query) }}"
  vars: 
    query: "json.items[0].machineId"
  when: 
    - device_address is defined
    - clusterName | length > 0
  
#- debug:
#    var: machine_id2

###### Get the device ID when an device hostname/DNS is given
- name: Get machineID of the device
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/resolver/device-groups/cm-adccore-allbigipDevices/devices?$filter=hostname%20eq%20'{{ device_name }}'"
    method: GET
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: json_response
  when: 
    - device_name is defined

- name: Get the machineID of the specified BIG-IP with name
  set_fact:
    machine_id: "{{ json_response | json_query(query) | join(' ') }}"
  vars: 
    query: "json.items[?hostname=='{{ device_name }}'].machineId"
  when: 
    - device_name is defined

# Check if it is a cluster or standalone
- name: Get cluster name if any
  set_fact:
    clusterName: "{{ json_response | json_query(query) | join(' ') }}"
  vars: 
    query: "json.items[?hostname=='{{ device_name }}'].properties.clusterName"
  when: 
    - device_name is defined

# If clusterName is defined, get the other node machine_id
- name: Get machineID of the other device
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/resolver/device-groups/cm-adccore-allbigipDevices/devices?$filter=address%20ne%20'{{ device_name }}'%20and%20properties.clusterName%20eq%20'{{ clusterName }}'"
    method: GET
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: json_response
  when: 
    - device_name is defined
    - clusterName | length > 0
    
- name: Get the machineID of the other BIG-IP part of the cluster
  set_fact:
    machine_id2: "{{ json_response | json_query(query) }}"
  vars: 
    query: "json.items[0].machineId"
  when: 
    - device_name is defined
    - clusterName | length > 0
  
#- debug:
#    var: machine_id2

